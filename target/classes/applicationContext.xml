<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">        
    <!-- spring扫描包 -->   
    <!-- <context:component-scan base-package="com.crut.bean, com.crut.service"/> -->
    <context:component-scan base-package="com.crut">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	<!-- spring 配置文件，主要配置和业务逻辑有关的 -->
	<!--配置数据源，Mybatis 事务 -->
	<!-- 加载 property文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	<!-- 配置c3p0数据源 -->
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />

	</bean>
	<!-- ***配置Mybatis************************ -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定Mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="dataSource" ref="dataSource" />
		<!-- mapper文件所在位置 -->
		<property name="mapperLocations"
			value="classpath:mapper/*.xml" />

	</bean>
	
	<!-- 配置一个可以执行批量插入的sqlsession -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
		<constructor-arg name="executorType" value="BATCH"/>
	</bean>
	
	<!-- 指定扫描器，扫描所有的mapper接口加入到IOC容器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有dao接口的实现，加入到IOC容器 -->
		<property name="basePackage" value="com.crut.dao" />
	</bean>

	<!--**********************事务控制的配置*********************-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 开启基于注解的事务，使用xml配置的形式的事务 -->
	<aop:config>
		<!-- 切入点表达式 -->
		<!-- execution(*(类修饰符) com.crut.service..(包括com.crut.service下的所有子包)*(service下的所有类)(..)(方法参数任意个) ) -->
		<aop:pointcut expression="execution(* com.crut.service..*(..))" id="txPoint"/>
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	<!-- 配置事务增强，事务如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*"/>
			<!-- 以get开始的所有方法 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

<!-- spring配置核心点   1.数据源  2.与mybatis整合 3.事务配置 -->




</beans>